{{- if gt (int .Values.server.workers) 0 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.worker" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  node.properties: |
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}
    plugin.dir={{ .Values.server.node.pluginDir }}
  {{- range $configValue := .Values.additionalNodeProperties }}
    {{ $configValue }}
  {{- end }}

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx{{ .Values.worker.jvm.maxHeapSize }}
    -XX:+{{ .Values.worker.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.worker.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading
  {{/* only check the version number if the image is not overriden in any way */}}
  {{- with .Values.image -}}
  {{- if and (eq .repository "trinodb/trino") (not .useRepositoryAsSoleImageReference) (not .registry) (not .digest) (gt (default $.Chart.AppVersion .tag | int ) 447 ) }}
    # https://bugs.openjdk.org/browse/JDK-8329528
    -XX:+UnlockDiagnosticVMOptions
    -XX:G1NumCollectionsKeepPinned=10000000
  {{- end }}{{/* if */}}
  {{- end }}{{/* with */}}
  {{- range $configValue := .Values.worker.additionalJVMConfig }}
    {{ $configValue }}
  {{- end }}

  config.properties: |
    coordinator=false
    http-server.http.port={{ .Values.service.port }}
    shutdown.grace-period={{ .Values.server.config.shutdownGracePeriodSecs }}s
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.worker.config.query.maxMemoryPerNode }}
    {{- if .Values.worker.config.memory.heapHeadroomPerNode }}
    memory.heap-headroom-per-node={{ .Values.worker.config.memory.heapHeadroomPerNode }}
    {{- end }}
    discovery.uri=http://{{ template "trino.fullname" . }}:{{ .Values.service.port }}
    retry-policy={{ .Values.server.config.retryPolicy }}
    {{- range $configValue := .Values.additionalConfigProperties }}
    {{ tpl $configValue $ }}
    {{- end }}
    {{- if .Values.server.workerExtraConfig }}
    {{- .Values.server.workerExtraConfig | nindent 4 }}
    {{- end }}

  access-control.properties: |
    access-control.name=allow-all

{{ if ne .Values.server.config.retryPolicy "NONE" }}
  exchange-manager.properties: |
    exchange-manager.name={{ .Values.server.exchangeManager.name }}
  {{ if eq .Values.server.exchangeManager.name "filesystem" }}
    exchange.base-directories={{ .Values.server.exchangeManager.baseDir }}
  {{- end }}
  {{- range $configValue := .Values.additionalExchangeManagerProperties }}
    {{ $configValue }}
  {{- end }}
{{- end }}

  log.properties: |
    io.trino={{ .Values.server.log.trino.level }}
  {{- range $configValue := .Values.additionalLogProperties }}
    {{ $configValue }}
  {{- end }}

{{ if .Values.eventListenerProperties }}
  event-listener.properties: |
  {{- range $configValue := .Values.eventListenerProperties }}
    {{ $configValue }}
  {{- end }}
{{ end }}

{{- range $fileName, $fileContent := .Values.worker.additionalConfigFiles }}
  {{ $fileName }}: |
    {{- $fileContent | nindent 4 }}
{{- end }}
---
{{- if .Values.kafka.tableDescriptions }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.fullname" . }}-schemas-volume-worker
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  {{- range $key, $val := .Values.kafka.tableDescriptions }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.fullname" . }}-shutdown-volume-worker
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
data:
  shutdown-worker.sh: |
    #!/usr/bin/env bash

    set -euxo pipefail

    SHUTDOWN_URL="http://localhost:{{ .Values.service.port }}/v1/info/state"
    curl_opts=(
      -v -X PUT -d '"SHUTTING_DOWN"'
      -H 'Content-type: application/json'
      -H 'X-Trino-User: trino-worker'
      --write-out '%{http_code}'
    )
    http_code="$( curl "${curl_opts[@]}" "${SHUTDOWN_URL}" )"

    if [ "${http_code}" != "200" ] ; then
      echo "Failed to shut down trino worker, got http error: ${http_code}"
      exit 1
    else
      # trino-worker container waits for 2x grace-periods
      # See: https://trino.io/docs/current/admin/graceful-shutdown.html
      sleep $(( 2*{{ .Values.server.config.shutdownGracePeriodSecs }} ))
      exit 0
    fi
{{- end }}
